{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","loading","transactions","payload","filter","transaction","id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","delete","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129a42f8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n    return (\n        <h2 className=\"header\">\n            FinWealth \n        </h2>\n    ) \n};\n","export default (state, action) => {\n    switch(action.type){\n        case 'GET_TRANSACTION':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [...state.transactions,action.payload]\n            }\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n","import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n    transactions: [] ,\n    error: null,\n    loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState)\n\n// Provider component\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    async function getTransactions(){\n        try{\n            const res = await axios.get('api/v1/transactions');\n            dispatch({\n                type: 'GET_TRANSACTION',\n                payload: res.data.data\n            })\n        } catch( err ){\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    }\n    async function deleteTransaction(id){\n        try{\n            await axios.delete(`/api/id/transactions/${id}`);\n            dispatch({\n                type: 'DELETE_TRANSACTION', \n                payload: id\n            })\n        }catch(err){\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n        \n    }\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TRANSACTION', \n            payload: transaction\n        });\n    }\n\n    // Adding transaction to database is giving error as database having issue to fetch the proxy\n    // async function addTransaction(transaction){\n    //     const config = {\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }\n    //     try {\n    //         const res = await axios.post('api/v1/transactions',transaction,config);\n    //         dispatch({\n    //             type: 'ADD_TRANSACTION', \n    //             payload: res.data.data\n    //         });\n    //     } catch (err) {\n    //         dispatch({\n    //             type: 'TRANSACTION_ERROR',\n    //             payload: err.response.data.error\n    //         });\n    //     }\n    // }\n\n    return (<GlobalContext.Provider value ={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n            {children}\n        </GlobalContext.Provider>)\n}","export function numberWithCommas(x){\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\n}","import React,{useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const Balance = () => {\n    const {transactions} = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc,item)=> acc += item,0).toFixed(2);\n    return (\n        <div>\n            <h4>Your Balance</h4>\n            <h1>${numberWithCommas(total)}</h1> \n        </div>\n    ) \n};\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const IncomeExpenses = () => {\n    const {transactions} = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc,item) => (acc += item),0)\n        .toFixed(2);\n\n    const expense = amounts\n        .filter(item => item < 0)\n        .reduce((acc, item) => (acc += item),0)*-1\n        .toFixed(2);\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n           <h4>Income</h4>\n           <p className=\"money plus\">+${numberWithCommas(income)}</p>\n        </div>\n            <div>\n            <h4>Expense</h4>\n            <p className=\"money minus\">-${numberWithCommas(expense)}</p>\n        </div>\n    </div>\n       \n    ) \n};\n","import React, { useContext } from 'react'\nimport {GlobalContext} from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\nexport const Transaction = ({transaction}) => {\n    const { deleteTransaction} = useContext(GlobalContext);\n    const sign = transaction.amount > 0 ? '+' : '-';\n    return (\n        <li className={transaction.amount<0?'minus':'plus'}> \n            {transaction.text}   \n            <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React , { useContext,useEffect } from 'react'\nimport {GlobalContext} from '../context/GlobalState'\nimport { Transaction } from './Transaction'\n\nexport const TransactionList = () => {\n    const { transactions, getTransactions } = useContext(GlobalContext);\n\n    useEffect(() => {\n        getTransactions();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    return (\n        <div>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n            </ul>\n        </div>\n    )\n}\n","import React,{useState, useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount\n        }\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text..\"></input>\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">Amount<br/>\n                    (negative - expense, positive - income)</label>\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  placeholder=\"Enter amount..\"/>\n                </div>\n                <button className=\"btn\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Header }  from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}